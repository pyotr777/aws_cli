#!/bin/bash
# Prints ID, State and Tags for all instances.
# With -t option prints only IDs and Name tags.
# With instance ID after option -t shows only Name tag for the given instance.

usage=$(cat <<USAGEBLOCK
Usage:
$(basename $0) [-t/-i [<instance ID>]]

With no options prints ID, State and Tags for all instances.
With instance ID after options -t or -i shows only Name tag or public IP address for the given instance.

Profiles:
Configure additional (not default) profiles with  .aws/credential and .aws/config.
Docs:
http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html#cli-multiple-profiles
Switch profile used by this command with --profile <profile_name> option.

OPTIONS
	-h, --help	Display this help.
	-t 			Print only IDs and Name tags.
	-i 			Print only public IPs of running instances.
USAGEBLOCK
)

while test $# -gt 0; do
    case "$1" in
        -h | --help)
            echo "$usage"
            exit 0
            ;;
        -t)
			PRINT_TAG="1"
			ID="$2";shift;
            ;;
        -i)
			PRINT_IPS="1"
			ID="$2";shift;
            ;;
        --profile)
			PROFILE="--profile $2"; shift;
			;;
        --)
            shift
            break;;
        -*)
            echo "Invalid option: $1"
            echo "$usage"
            exit 1;;
    esac
    shift
done

#echo "PRINT_TAG=$PRINT_TAG, ID=$ID."
#set -x
if [[ -z "$ID" ]]; then
	if [[ -n "$PRINT_TAG" ]]; then
		aws ec2 $PROFILE describe-tags --output text | awk '{ print $3"\t"$5 }'
	elif [[ -n "$PRINT_IPS" ]]; then
		aws ec2 $PROFILE describe-instances --filters "Name=instance-state-name,Values=running" --output json | jq -c -r ".Reservations[] | .Instances[]| [.PublicIpAddress] | @csv " | sed 's/\"//g'
	else
		LS=$(aws ec2 $PROFILE describe-instances --output json | jq -r -c ".Reservations[] | .Instances[] | [.InstanceId, .State.Name, .KeyName,.ImageId, .PublicIpAddress] | @csv" | sed 's/\"//g')
		arr=( $(echo "$LS") )
		FORMAT='%-20s\t%-15s\t%-15s\t%-20s\t%-15s\t%-15s\n'
		printf $FORMAT "ID" "TAG" "STATE" "IP" "KEY" "IMAGE"
		for line in "${arr[@]}"; do
			IFS=$','; words=( $(echo "$line") )
			ID=${words[0]}
			TAG=$(eval "shortcut_commands/awstag $ID $PROFILE")
			#IP=$(aws ec2 describe-instances --instance-ids $ID --query 'Reservations[0].Instances[0].PublicIpAddress')
			IP=${words[4]}
			printf $FORMAT "$ID" "$TAG" "${words[1]}" "$IP" "${words[2]}" "${words[3]}"
		done
	fi
else
	if [[ -n "$PRINT_TAG" ]]; then
		aws ec2 $PROFILE describe-tags --filters "Name=tag:Name,Values=$ID" --output text | awk '{ print $3"\t"$5 }'
	else
		aws ec2 $PROFILE describe-instances --filters "Name=tag:Name,Values=$ID" "Name=instance-state-name,Values=running" --output json | jq -c -r ".Reservations[] | .Instances[] | [.PublicIpAddress] | @csv " | sed 's/\"//g'
	fi
fi

